{"version":3,"sources":["scripts/main.js"],"names":["header","document","querySelector","firstElementChild","children","list","addEventListener","e","target","closest","targetElementIndex","indexOf","employeeRowElements","getRowValue","row","textContent","sort","row1","row2","replace","localeCompare","append"],"mappings":";AAAA,aAKA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAHA,IAAMA,EAAaC,EAAAA,SAASC,cAAc,SAASC,kBAAkBC,UAC/DC,EAAOJ,SAASC,cAAc,SAEpCD,SAASC,cAAc,SAASI,iBAAiB,QAAS,SAACC,GACnDC,IAAAA,EAASD,EAAEC,OAAOC,QAAQ,MAE1BC,EAAqBV,EAAOW,QAAQH,GAEtC,GAACA,IAAkC,IAAxBE,EAAX,CAIEE,IAAAA,EAA0BP,EAAAA,EAAKD,UAE/BS,EAAc,SAAAC,GAAOA,OAAAA,EAAIV,SAASM,GAAoBK,aAEpDP,OAAAA,EAAOO,aACR,IAAA,MACHH,EAAoBI,KAAK,SAACC,EAAMC,GAC9BL,OAAAA,EAAYI,GAAQJ,EAAYK,KAElC,MAEG,IAAA,SACHN,EAAoBI,KAAK,SAACC,EAAMC,GAC9BL,OAAAA,EAAYI,GAAME,QAAQ,UAAW,IACnCN,EAAYK,GAAMC,QAAQ,UAAW,MAEzC,MAEG,IAAA,OACA,IAAA,WACHP,EAAoBI,KAAK,SAACC,EAAMC,GAC9BL,OAAAA,EAAYI,GAAMG,cAAcP,EAAYK,MAKlDb,EAAKgB,OAALhB,MAAAA,EAAeO,EAAAA","file":"main.b3a22256.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst header = [...document.querySelector('thead').firstElementChild.children];\nconst list = document.querySelector('tbody');\n\ndocument.querySelector('table').addEventListener('click', (e) => {\n  const target = e.target.closest('th');\n\n  const targetElementIndex = header.indexOf(target);\n\n  if (!target || targetElementIndex === -1) {\n    return;\n  }\n\n  const employeeRowElements = [...list.children];\n\n  const getRowValue = row => row.children[targetElementIndex].textContent;\n\n  switch (target.textContent) {\n    case 'Age':\n      employeeRowElements.sort((row1, row2) =>\n        getRowValue(row1) - getRowValue(row2)\n      );\n      break;\n\n    case 'Salary':\n      employeeRowElements.sort((row1, row2) =>\n        getRowValue(row1).replace(/[^0-9]/g, '')\n        - getRowValue(row2).replace(/[^0-9]/g, '')\n      );\n      break;\n\n    case 'Name':\n    case 'Position':\n      employeeRowElements.sort((row1, row2) =>\n        getRowValue(row1).localeCompare(getRowValue(row2))\n      );\n      break;\n  }\n\n  list.append(...employeeRowElements);\n});\n"]}